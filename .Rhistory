library(flapper)
head(dat_acoustics)
dat_acoustics$detection_timestamp_utc <- dat_acoustics$timestamp
dat_acoustics$transmitter_codespace <- substr(dat_acoustics$transmitter_id, 1, 8)
dat_acoustics$transmitter_id <- substr(dat_acoustics$transmitter_id, 10, 13)
dat_acoustics$receiver_sn <- dat_acoustics$receiver_id
det <- dat_acoustics[, c("detection_timestamp_utc", "transmitter_codespace", "transmitter_id", "receiver_sn")]
det <- glatos::false_detections(det, tf = 3600)
# distances
dist_btw_receivers <- dist_btw_receivers(dat_moorings[, c("receiver_id", "receiver_long", "receiver_lat")])
det <- false_detections_sf(det, tf = 3600, sf = 0.5, dist_btw_receivers = dist_btw_receivers)
View(false_detections_sf)
#### Add some false detections for demonstration purposes
tail(dat_acoustics)
dat_acoustics[nrow(dat_acoustics)]
dat_acoustics[nrow(dat_acoustics), ]
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[nrow(dat_acoustics), ])
dat_acoustics_with_false_det$timestamp <- dat_acoustics_with_false_det$timestamp + 60*60*60
dat_acoustics_with_false_det$timestamp
#### Add some false detections for demonstration purposes
tail(dat_acoustics)
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[nrow(dat_acoustics), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[nrow(dat_acoustics), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det$receiver_id[nrw]
View(dist_btw_receiver)
View(dist_btw_receivers)
#### Add some false detections for demonstration purposes
tail(dat_acoustics)
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[nrow(dat_acoustics), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[nrow(dat_acoustics), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det$receiver_id[nrw] <- 4
head(dat_acoustics)
dat_acoustics$detection_timestamp_utc <- dat_acoustics$timestamp
dat_acoustics$transmitter_codespace <- substr(dat_acoustics$transmitter_id, 1, 8)
dat_acoustics$transmitter_id <- substr(dat_acoustics$transmitter_id, 10, 13)
dat_acoustics$receiver_sn <- dat_acoustics$receiver_id
det <- dat_acoustics[, c("detection_timestamp_utc", "transmitter_codespace", "transmitter_id", "receiver_sn")]
det <- glatos::false_detections(det, tf = 3600)
60*60
#### Add some false detections for demonstration purposes
tail(dat_acoustics)
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[nrow(dat_acoustics), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det <- rbind(dat_acoustics_with_false_det,
dat_acoustics_with_false_det[nrow(dat_acoustics_with_false_det), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det$receiver_id[nrw] <- 4
head(dat_acoustics)
dat_acoustics$detection_timestamp_utc <- dat_acoustics$timestamp
dat_acoustics$transmitter_codespace <- substr(dat_acoustics$transmitter_id, 1, 8)
dat_acoustics$transmitter_id <- substr(dat_acoustics$transmitter_id, 10, 13)
dat_acoustics$receiver_sn <- dat_acoustics$receiver_id
det <- dat_acoustics[, c("detection_timestamp_utc", "transmitter_codespace", "transmitter_id", "receiver_sn")]
det <- glatos::false_detections(det, tf = 3600)
60*60*60
60*60
#### Add some false detections for demonstration purposes
tail(dat_acoustics)
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[nrow(dat_acoustics), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det <- rbind(dat_acoustics_with_false_det,
dat_acoustics_with_false_det[nrow(dat_acoustics_with_false_det), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det$receiver_id[nrw] <- 4
head(dat_acoustics)
dat_acoustics_with_false_det$detection_timestamp_utc <- dat_acoustics_with_false_det$timestamp
dat_acoustics_with_false_det$transmitter_codespace <- substr(dat_acoustics_with_false_det$transmitter_id, 1, 8)
dat_acoustics_with_false_det$transmitter_id <- substr(dat_acoustics_with_false_det$transmitter_id, 10, 13)
dat_acoustics_with_false_det$receiver_sn <- dat_acoustics_with_false_det$receiver_id
det <- dat_acoustics_with_false_det[, c("detection_timestamp_utc", "transmitter_codespace", "transmitter_id", "receiver_sn")]
det <- glatos::false_detections(det, tf = 3600)
# distances
dist_btw_receivers <- dist_btw_receivers(dat_moorings[, c("receiver_id", "receiver_long", "receiver_lat")])
det <- false_detections_sf(det, tf = 3600, sf = 0.5, dist_btw_receivers = dist_btw_receivers)
det <- false_detections_sf(det, tf = 3600, sf = 0, dist_btw_receivers = dist_btw_receivers)
det <- false_detections_sf(det, tf = 3600, sf = 0, dist_btw_receivers = dist_btw_receivers)
det <- false_detections_sf(det, tf = 3600, sf = 0.1, dist_btw_receivers = dist_btw_receivers)
det <- false_detections_sf(det, tf = 3600, sf = 0.5, dist_btw_receivers = dist_btw_receivers)
#### Examples
library(flapper)
#### Add some false detections for demonstration purposes
tail(dat_acoustics)
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[nrow(dat_acoustics), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det <- rbind(dat_acoustics_with_false_det,
dat_acoustics_with_false_det[nrow(dat_acoustics_with_false_det), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det$receiver_id[nrw] <- 4
head(dat_acoustics)
dat_acoustics_with_false_det$detection_timestamp_utc <- dat_acoustics_with_false_det$timestamp
dat_acoustics_with_false_det$transmitter_codespace <- substr(dat_acoustics_with_false_det$transmitter_id, 1, 8)
dat_acoustics_with_false_det$transmitter_id <- substr(dat_acoustics_with_false_det$transmitter_id, 10, 13)
dat_acoustics_with_false_det$receiver_sn <- dat_acoustics_with_false_det$receiver_id
det <- dat_acoustics_with_false_det[, c("detection_timestamp_utc", "transmitter_codespace", "transmitter_id", "receiver_sn")]
det <- glatos::false_detections(det, tf = 3600)
# distances
dist_btw_receivers <- dist_btw_receivers(dat_moorings[, c("receiver_id", "receiver_long", "receiver_lat")])
det <- false_detections_sf(det, tf = 3600, sf = 0.5, dist_btw_receivers = dist_btw_receivers)
#### Examples
library(flapper)
#### Add some false detections for demonstration purposes
tail(dat_acoustics)
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[nrow(dat_acoustics), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det <- rbind(dat_acoustics_with_false_det,
dat_acoustics_with_false_det[nrow(dat_acoustics_with_false_det), ])
nrw <- nrow(dat_acoustics_with_false_det)
dat_acoustics_with_false_det$timestamp[nrw] <- dat_acoustics_with_false_det$timestamp[nrw] + 60*60*60
dat_acoustics_with_false_det$receiver_id[nrw] <- 4
head(dat_acoustics)
dat_acoustics_with_false_det$detection_timestamp_utc <- dat_acoustics_with_false_det$timestamp
dat_acoustics_with_false_det$transmitter_codespace <- substr(dat_acoustics_with_false_det$transmitter_id, 1, 8)
dat_acoustics_with_false_det$transmitter_id <- substr(dat_acoustics_with_false_det$transmitter_id, 10, 13)
dat_acoustics_with_false_det$receiver_sn <- dat_acoustics_with_false_det$receiver_id
det <- dat_acoustics_with_false_det[, c("detection_timestamp_utc", "transmitter_codespace", "transmitter_id", "receiver_sn")]
det <- glatos::false_detections(det, tf = 3600)
# distances
dist_btw_receivers <- dist_btw_receivers(dat_moorings[, c("receiver_id", "receiver_long", "receiver_lat")])
det <- false_detections_sf(det, tf = 3600, sf = 0.5, dist_btw_receivers = dist_btw_receivers)
dist_btw_receivers
?false_detections_sf
#### Add some false detections for demonstration purposes
# Add three rows to dat_acoustics for three possibly 'false detections'
dat_acoustics_with_false_det <- rbind(dat_acoustics, rep(dat_acoustics[nrow(dat_acoustics), ], 3))
rep(dat_acoustics[nrow(dat_acoustics), ], 3)
dat_acoustics[nrow(dat_acoustics), ]
#### Add some false detections for demonstration purposes
# Add three rows to dat_acoustics for three possibly 'false detections'
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[rep(nrow(dat_acoustics), 3), ])
pos_false <- (nrow(dat_acoustics_with_false_det) - 3):nrow(dat_acoustics_with_false_det)
pos_false
#### Add some false detections for demonstration purposes
# Add three rows to dat_acoustics which, below, we'll make 'false detections'
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[rep(nrow(dat_acoustics), 3), ])
pos_false <- (nrow(dat_acoustics_with_false_det) - 3):nrow(dat_acoustics_with_false_det)
pos_false
#### Add some false detections for demonstration purposes
# Add three rows to dat_acoustics which, below, we'll make 'false detections'
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[rep(nrow(dat_acoustics), 3), ])
pos_false <- (nrow(dat_acoustics_with_false_det) - 2):nrow(dat_acoustics_with_false_det)
# Add an isolated detection accompanied by a detection at a nearby receiver
dat_acoustics_with_false_det$timestamp[pos_false[1]] <- dat_acoustics_with_false_det$timestamp[pos_false[1]] + 60*60*60
# Add an isolated detection accompanied by a detection at a nearby receiver
dat_acoustics_with_false_det$timestamp[pos_false[1:2]] <- dat_acoustics_with_false_det$timestamp[pos_false[1:2]] + 60*60*60
dat_acoustics_with_false_det$receiver_id[pos_false[2]]
dat_acoustics_with_false_det$receiver_id[pos_false[2]] <- 33
#### Examples
library(flapper)
#### Add some false detections for demonstration purposes
# Add three rows to dat_acoustics which, below, we'll make 'false detections'
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[rep(nrow(dat_acoustics), 3), ])
pos_false <- (nrow(dat_acoustics_with_false_det) - 2):nrow(dat_acoustics_with_false_det)
# Add an isolated detection accompanied by a detection at a nearby receiver
dat_acoustics_with_false_det$timestamp[pos_false[1:2]] <- dat_acoustics_with_false_det$timestamp[pos_false[1:2]] + 60*60*60
dat_acoustics_with_false_det$receiver_id[pos_false[2]] <- 33
# Add an isolated detection not accompanied by a detection at a nearby receiver
dat_acoustics_with_false_det$timestamp[pos_false[3]] <- dat_acoustics_with_false_det$timestamp[pos_false[3]] + 60*60*60
#### Define necessary columns to compute false detections using glatos::false_detections()
dat_acoustics_with_false_det$detection_timestamp_utc <- dat_acoustics_with_false_det$timestamp
dat_acoustics_with_false_det$transmitter_codespace <- substr(dat_acoustics_with_false_det$transmitter_id, 1, 8)
dat_acoustics_with_false_det$transmitter_id <- substr(dat_acoustics_with_false_det$transmitter_id, 10, 13)
dat_acoustics_with_false_det$receiver_sn <- dat_acoustics_with_false_det$receiver_id
det <- dat_acoustics_with_false_det[, c("detection_timestamp_utc", "transmitter_codespace", "transmitter_id", "receiver_sn")]
#### Compute false detections
det <- glatos::false_detections(det, tf = 3600)
#### Pass false detections through a spatial filter
# distances between receivers are required
dist_btw_receivers <- dist_btw_receivers(dat_moorings[, c("receiver_id", "receiver_long", "receiver_lat")])
# Implement spatial filter
det <- false_detections_sf(det, tf = 3600, sf = 0.5, dist_btw_receivers = dist_btw_receivers)
#### Examples
library(flapper)
#### Add some false detections for demonstration purposes
# Add three rows to dat_acoustics which, below, we'll make 'false detections'
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[rep(nrow(dat_acoustics), 3), ])
pos_false <- (nrow(dat_acoustics_with_false_det) - 2):nrow(dat_acoustics_with_false_det)
# Add an isolated detection accompanied by a detection at a nearby receiver
dat_acoustics_with_false_det$timestamp[pos_false[1:2]] <- dat_acoustics_with_false_det$timestamp[pos_false[1:2]] + 60*60*60
dat_acoustics_with_false_det$receiver_id[pos_false[2]] <- 33
# Add an isolated detection not accompanied by a detection at a nearby receiver
dat_acoustics_with_false_det$timestamp[pos_false[3]] <- dat_acoustics_with_false_det$timestamp[pos_false[3]] + 60*60*60*2
#### Define necessary columns to compute false detections using glatos::false_detections()
dat_acoustics_with_false_det$detection_timestamp_utc <- dat_acoustics_with_false_det$timestamp
dat_acoustics_with_false_det$transmitter_codespace <- substr(dat_acoustics_with_false_det$transmitter_id, 1, 8)
dat_acoustics_with_false_det$transmitter_id <- substr(dat_acoustics_with_false_det$transmitter_id, 10, 13)
dat_acoustics_with_false_det$receiver_sn <- dat_acoustics_with_false_det$receiver_id
det <- dat_acoustics_with_false_det[, c("detection_timestamp_utc", "transmitter_codespace", "transmitter_id", "receiver_sn")]
#### Compute false detections
det <- glatos::false_detections(det, tf = 3600)
#### Pass false detections through a spatial filter
# distances between receivers are required
dist_btw_receivers <- dist_btw_receivers(dat_moorings[, c("receiver_id", "receiver_long", "receiver_lat")])
# Implement spatial filter
det <- false_detections_sf(det, tf = 3600, sf = 0.5, dist_btw_receivers = dist_btw_receivers)
tail(det)
#### Examples
library(flapper)
#### Add some false detections for demonstration purposes
# Add three rows to dat_acoustics which, below, we'll make 'false detections'
dat_acoustics_with_false_det <- rbind(dat_acoustics, dat_acoustics[rep(nrow(dat_acoustics), 3), ])
pos_false <- (nrow(dat_acoustics_with_false_det) - 2):nrow(dat_acoustics_with_false_det)
# Add an isolated detection accompanied by a detection at a nearby receiver
dat_acoustics_with_false_det$timestamp[pos_false[1:2]] <- dat_acoustics_with_false_det$timestamp[pos_false[1:2]] + 60*60*60
dat_acoustics_with_false_det$receiver_id[pos_false[2]] <- 33
# Add an isolated detection not accompanied by a detection at a nearby receiver
dat_acoustics_with_false_det$timestamp[pos_false[3]] <- dat_acoustics_with_false_det$timestamp[pos_false[3]] + 60*60*60*2
#### Define necessary columns to compute false detections using glatos::false_detections()
dat_acoustics_with_false_det$detection_timestamp_utc <- dat_acoustics_with_false_det$timestamp
dat_acoustics_with_false_det$transmitter_codespace <- substr(dat_acoustics_with_false_det$transmitter_id, 1, 8)
dat_acoustics_with_false_det$transmitter_id <- substr(dat_acoustics_with_false_det$transmitter_id, 10, 13)
dat_acoustics_with_false_det$receiver_sn <- dat_acoustics_with_false_det$receiver_id
det <- dat_acoustics_with_false_det[, c("detection_timestamp_utc", "transmitter_codespace", "transmitter_id", "receiver_sn")]
#### Compute false detections
# 3 false detections returned, as expected:
det <- glatos::false_detections(det, tf = 3600)
tail(det)
tail(det$passed_filter)
# Implement spatial filter. Note the function returns a vector, unlike glatos::false_detections():
det$passed_filter_sf <- false_detections_sf(det, tf = 3600, sf = 0.5, dist_btw_receivers = dist_btw_receivers)
det$passed_filter_sf
tail(det$passed_filter_sf)
# Only the last observation failed the spatial filter, as expected:
tail(det$passed_filter_sf)
# Additional information is available from the attributes dataframe:
attr(det)
# Additional information is available from the attributes dataframe:
attr(det$passed_filter_sf, "details")
# Additional information is available from the attributes dataframe:
tail(attr(det$passed_filter_sf, "details"))
library(flapper)
devtools::spell_check()
?DateTimeClasses
?date
?Date
source('~/Desktop/add_unit_id.R')
dat_units <- data.frame(unit = c(1, 1, 2),
unit_id = c(1, 2, 3),
start_time = as.Date(c("2016-01-01", "2016-01-02", "2016-01-01")),
end_time = as.Date(c("2016-01-02", "2016-01-01", "2016-01-02"))
)
dat_ts <- data.frame(unit = c(1, 1),
timestamp = as.Date(c("2016-01-01", "2016-01-01", "2016-02-02"))
)
dat_ts <- data.frame(unit = c(1, 1, 1),
timestamp = as.Date(c("2016-01-01", "2016-01-01", "2016-02-02"))
)
dat_units <- data.frame(unit = c(1, 1, 2),
unit_id = c(1, 2, 3),
start_time = as.Date(c("2016-01-01", "2016-01-02", "2016-01-01")),
end_time = as.Date(c("2016-01-02", "2016-01-01", "2016-01-02"))
)
dat_ts$unit_id <- add_unit_id(dat_ts, dat_units)
dat_ts <- data.frame(unit = c(1, 1, 1),
timestamp = as.Date(c("2016-01-01", "2016-01-01", "2016-01-02"))
)
dat_units <- data.frame(unit = c(1, 1, 2),
unit_id = c(1, 2, 3),
start_time = as.Date(c("2016-01-01", "2016-01-02", "2016-01-01")),
end_time = as.Date(c("2016-01-02", "2016-01-01", "2016-01-02"))
)
dat_ts$unit_id <- add_unit_id(dat_ts, dat_units)
dat_ts <- data.frame(unit = c(1, 1, 1),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-01 00:40:00",
"2016-01-02 00:30:00"))
)
dat_units <- data.frame(unit = c(1, 1, 2),
unit_id = c(1, 2, 3),
start_time = as.POSIXct(c("2016-01-01", "2016-01-02", "2016-01-01")),
end_time = as.POSIXct(c("2016-01-02", "2016-01-01", "2016-01-02"))
)
dat_ts$unit_id <- add_unit_id(dat_ts, dat_units)
dat_units
dat_ts <- data.frame(unit = c(1, 1, 1),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-01 00:40:00",
"2016-01-02 00:30:00"))
)
dat_units <- data.frame(unit = c(1, 1, 2),
unit_id = c(1, 2, 3),
start_time = as.POSIXct(c("2016-01-01", "2016-01-02", "2016-01-01")),
end_time = as.POSIXct(c("2016-01-02", "2016-01-03", "2016-01-02"))
)
dat_ts$unit_id <- add_unit_id(dat_ts, dat_units)
dat_ts
?add_unit_id
?add_receiver_id
help
library(flapper)
?add_receiver_id
moorings <- data.frame(receiver = c(1, 1, 2),
receiver_id = c(1, 2, 3),
start_date = as.Date(c("2016-01-01", "2016-01-02", "2016-01-01")),
end_date = as.Date(c("2016-01-02", "2016-01-03", "2016-01-02"))
)
acoustics <- data.frame(receiver = c(1, 1, 1),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-01 00:40:00",
"2016-01-02 00:30:00"))
)
acoustics$receiver_id <- add_receiver_id(acoustics, moorings)
acoustics
library(flapper)
#### Define example data
# In this example, we have two receivers, but one has been re-deployed:
moorings <- data.frame(receiver = c(1, 1, 2),
receiver_id = c(1, 2, 3),
start_date = as.Date(c("2016-01-01", "2016-01-02", "2016-01-01")),
end_date = as.Date(c("2016-01-02", "2016-01-03", "2016-01-02"))
)
# Our observational dataframe contains receivers but not unique receiver IDs:
acoustics <- data.frame(receiver = c(1, 1, 1),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-01 00:40:00",
"2016-01-02 00:30:00"))
)
#### Example (1): Add unique receiver IDs to the observational dataframe
# The first observation corresponds to receiver 1;
# The second observation corresponds to the same receiver
# ... but a different deployment, and has receiver_id = 2
# The third observation corresponds to receiver id 2;
acoustics$receiver_id <- add_receiver_id(acoustics, moorings)
rm(list = ls())
library(flapper)
#### Define example data
# In this example, we have two receivers, but one has been re-deployed:
moorings <- data.frame(receiver = c(1, 1, 2),
receiver_id = c(1, 2, 3),
start_date = as.Date(c("2016-01-01", "2016-01-02", "2016-01-01")),
end_date = as.Date(c("2016-01-02", "2016-01-03", "2016-01-02"))
)
# Our observational dataframe contains receivers but not unique receiver IDs:
acoustics <- data.frame(receiver = c(1, 1, 1),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-01 00:40:00",
"2016-01-02 00:30:00"))
)
#### Example (1): Add unique receiver IDs to the observational dataframe
# The first observation corresponds to receiver 1;
# The second observation corresponds to the same receiver
# ... but a different deployment, and has receiver_id = 2
# The third observation corresponds to receiver id 2;
acoustics$receiver_id <- add_receiver_id(acoustics, moorings)
str(mooringds)
str(mooringd)
str(moorings)
?add_receiver_id
#### Define example data
# In this example, we have two receivers, but one has been re-deployed:
moorings <- data.frame(receiver = c(1, 1, 2),
receiver_id = c(1, 2, 3),
start_date = as.POSIXct(c("2016-01-01", "2016-01-02", "2016-01-01"), tz = "UTC"),
end_date = as.POSIXct(c("2016-01-02", "2016-01-03", "2016-01-02"), tz = "UTC")
)
# Our observational dataframe contains receivers but not unique receiver IDs:
acoustics <- data.frame(receiver = c(1, 1, 1),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-01 00:40:00",
"2016-01-02 00:30:00"), tz = "UTC")
)
#### Example (1): Add unique receiver IDs to the observational dataframe
# The first observation corresponds to receiver 1;
# The second observation corresponds to the same receiver
# ... but a different deployment, and has receiver_id = 2
# The third observation corresponds to receiver id 2;
acoustics$receiver_id <- add_receiver_id(acoustics, moorings)
head(acoustics)
library(flapper)
?add_receiver_id
#### Define example data
# In this example, we have two receivers, but one has been re-deployed:
moorings <- data.frame(receiver = c(1, 1, 2),
receiver_id = c(1, 2, 3),
start_date = as.POSIXct(c("2016-01-01", "2016-01-02", "2016-01-01"), tz = "UTC"),
end_date = as.POSIXct(c("2016-01-02", "2016-01-03", "2016-01-02"), tz = "UTC")
)
# Our observational dataframe contains receivers but not unique receiver IDs:
acoustics <- data.frame(receiver = c(1, 1, 1),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-01 00:40:00",
"2016-01-02 00:30:00"), tz = "UTC")
)
#### Example (1): Add unique receiver IDs to the observational dataframe
# The first observation corresponds to receiver 1;
# The second observation corresponds to the same receiver
# ... but a different deployment, and has receiver_id = 2
# The third observation corresponds to receiver id 2;
acoustics$receiver_id <- add_receiver_id(acoustics, moorings)
acoustics
library(flapper)
#### Define example data
# In this example, we have two receivers, but one has been re-deployed:
moorings <- data.frame(receiver = c(1, 1, 2),
receiver_id = c(1, 2, 3),
start_date = as.POSIXct(c("2016-01-01", "2016-01-02", "2016-01-01"), tz = "UTC"),
end_date = as.POSIXct(c("2016-01-02", "2016-01-03", "2016-01-02"), tz = "UTC")
)
# Our observational dataframe contains receivers but not unique receiver IDs:
acoustics <- data.frame(receiver = c(1, 1, 1),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-01 00:40:00",
"2016-01-02 00:30:00"), tz = "UTC")
)
#### Example (1): Add unique receiver IDs to the observational dataframe
# The first observation corresponds to receiver 1;
# The second observation corresponds to the same receiver
# ... but a different deployment, and has receiver_id = 2
# The third observation corresponds to receiver id 2;
acoustics$receiver_id <- add_receiver_id(acoustics, moorings)
acoustics
?add_receiver_id
#### Define example data
# In this example, we have two receivers, but one has been re-deployed:
moorings <- data.frame(receiver = c(1, 1, 2),
receiver_id = c(1, 2, 3),
start_date = as.POSIXct(c("2016-01-01", "2016-01-02", "2016-01-01"), tz = "UTC"),
end_date = as.POSIXct(c("2016-01-02", "2016-01-03", "2016-01-02"), tz = "UTC")
)
# Our observational dataframe contains receivers but not unique receiver IDs:
acoustics <- data.frame(receiver = c(1, 1, 1),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-02 00:30:00",
"2016-01-02 00:30:00"), tz = "UTC")
)
#### Example (1): Add unique receiver IDs to the observational dataframe
# The first observation corresponds to receiver 1;
# The second observation corresponds to the same receiver
# ... but a different deployment, and has receiver_id = 2
# The third observation corresponds to receiver id 2;
acoustics$receiver_id <- add_receiver_id(acoustics, moorings)
acoutics
acoustics
library(flapper)
#### Define example data
# In this example, we have two unit, but one has been re-deployed:
dat_units <- data.frame(unit = c(1, 1, 2),
unit_id = c(1, 2, 3),
start_time = as.POSIXct(c("2016-01-01", "2016-01-02", "2016-01-01")),
end_time = as.POSIXct(c("2016-01-02", "2016-01-03", "2016-01-02"))
)
# Our observational dataframe contains units but not unique unit IDs:
dat_ts <- data.frame(unit = c(1, 1, 1),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-02 00:30:00",
"2016-01-02 00:30:00"))
)
#### Example (1): Add unit IDs to the observational dataframe
# The first observation corresponds to unit_id 1;
# The second observation corresponds to the same unit
# ... but a different deployment, and has unit_id = 2
# The third observation corresponds to unit id 2;
dat_ts$unit_id <- add_unit_id(dat_ts, dat_units)
?add_receiver_id
#### Define example data
# In this example, we have two receivers, but one has been re-deployed:
moorings <- data.frame(receiver = c(1, 1, 2),
receiver_id = c(1, 2, 3),
start_date = as.POSIXct(c("2016-01-01", "2016-01-02", "2016-01-01"), tz = "UTC"),
end_date = as.POSIXct(c("2016-01-02", "2016-01-03", "2016-01-02"), tz = "UTC")
)
# Our observational dataframe contains receivers but not unique receiver IDs:
acoustics <- data.frame(receiver = c(1, 1, 2),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-02 00:30:00",
"2016-01-02 00:30:00"), tz = "UTC")
)
#### Example (1): Add unique receiver IDs to the observational dataframe
# The first observation corresponds to receiver 1;
# The second observation corresponds to the same receiver
# ... but a different deployment, and has receiver_id = 2
# The third observation corresponds to receiver id 3;
acoustics$receiver_id <- add_receiver_id(acoustics, moorings)
acoustics
library(flapper)
?add_receiver_id
#### Define example data
# In this example, we have two receivers, but one has been re-deployed:
moorings <- data.frame(receiver = c(1, 1, 2),
receiver_id = c(1, 2, 3),
start_date = as.POSIXct(c("2016-01-01", "2016-01-02", "2016-01-01"), tz = "UTC"),
end_date = as.POSIXct(c("2016-01-02", "2016-01-03", "2016-01-02"), tz = "UTC")
)
# Our observational dataframe contains receivers but not unique receiver IDs:
acoustics <- data.frame(receiver = c(1, 1, 2),
timestamp = as.POSIXct(c("2016-01-01 00:30:00",
"2016-01-02 00:30:00",
"2016-01-01 00:30:00"), tz = "UTC")
)
#### Example (1): Add unique receiver IDs to the observational dataframe
# The first observation corresponds to receiver 1;
# The second observation corresponds to the same receiver
# ... but a different deployment, and has receiver_id = 2
# The third observation corresponds to receiver id 3;
acoustics$receiver_id <- add_receiver_id(acoustics, moorings)
acoustics
library(flapper)
devtools::build_manual()
