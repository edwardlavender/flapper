% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{check_value}
\alias{check_value}
\title{Check the input value to a parent function argument}
\usage{
check_value(arg = deparse(substitute(input)), input, supp, default = supp[1])
}
\arguments{
\item{arg}{A character string which defines the argument of the parent function.}

\item{input}{The input to an argument of a parent function.}

\item{supp}{A vector of supported input values for the argument in the parent function.}

\item{default}{The default input value for the parent function.}
}
\value{
The function returns \code{input} or \code{default} (the latter with a warning) depending on whether or not \code{input} is within \code{supp} (i.e., whether or not the input to the argument of a parent function is supported).
}
\description{
Within a function, this function checks the value of an input to an argument of that function. If the input value is supported, the function simply returns this value. If the input is not supported, the function returns a warning and the default value. This function is designed to be implemented internally within functions and not intended for general use.
}
\examples{

#### Define an example function:
# The function returns 1 or 2, depending on the input to 'output'
return_1_or_2 <- function(output = 1){
  # Check the output, changing the output to the default if necessary
  output <- check_value(arg = "output", input = output, supp = 1:2, default = 1)
  # Return a value according to 'output'
  if(output == 1) return(1) else if(output == 2) return(2)
}

#### Example (1): If a supported input to output is provided, everything works perfectly:
return_1_or_2(1); return_1_or_2(2)

#### Example (2): # If an unsupported input to output is provided,
# ... the default output is used with a warning:
\dontrun{
return_1_or_2(3)
}

}
\author{
Edward Lavender
}
