% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_tools.R
\name{segments_cross_barrier}
\alias{segments_cross_barrier}
\title{Determine if Euclidean path segments cross a barrier}
\usage{
segments_cross_barrier(start, end, barrier)
}
\arguments{
\item{start}{A two-column matrix of coordinates that defines the `start' location of each segment.}

\item{end}{A two-column matrix of coordinates that defines the `end' location of each segment.}

\item{barrier}{A simple feature geometry that defines the barrier (see \code{\link[sf]{st_intersects}}).}
}
\value{
The function returns a one-column matrix, with each row corresponding to a row in \code{start}/\code{end}, with a logical value that defines whether or not the Euclidean path segment connecting those two locations crosses the \code{barrier} (\code{TRUE}) or not (\code{FALSE}).

Edward Lavender
}
\description{
Given a sequence of `starting' and `ending' positions, this function determines whether or not the Euclidean path between each starting and ending position crosses a barrier.
}
\details{
This function was motivated by the need to support internal routines in \code{\link[flapper]{pf_simplify}}.

The number of observations in \code{start} and \code{end} must match.

The coordinate reference system for \code{start}, \code{end} and \code{barrier} must match.

The function requires the \code{\link[sfheaders]{sf_linestring}} and \code{\link[sf]{st_intersects}} functions.

For speed in iterative applications, the function does not check whether or not these criteria are met.
}
\examples{
## Plot example area
raster::plot(dat_gebco)
raster::lines(dat_coast)

## Define example starting and ending locations
start <- matrix(c(701854.9, 6260399,
                  709202.5, 6258892), ncol = 2, byrow = TRUE)
end <- matrix(c(706753.3, 6264261,
                709673.5, 6257102), ncol = 2, byrow = TRUE)

## Visualise segments
# ... The first segment crosses the coastline (our barrier)
# ... The second segment does not cross the coastline (our barrier)
graphics::arrows(x0 = start[1, 1], y0 = start[1, 2],
                 x1 = end[1, 1], y1 = end[1, 2])
graphics::arrows(x0 = start[2, 1], y0 = start[2, 2],
                 x1 = end[2, 1], y1 = end[2, 2])

## Implement function
barrier <- sf::st_as_sf(dat_coast)
sf::st_crs(barrier) <- NA
segments_cross_barrier(start, end, barrier = barrier)

}
